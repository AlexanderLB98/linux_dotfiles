#!/bin/bash

LIB_DIR="/usr/lib"
LIB_PREFIX="libvtk"
FILES=(
    "libvtkFiltersGeometryPreview.so.1"
    "libvtkCommonMath.so.1"
    "libvtkFiltersParallelVerdict.so.1"
    "libvtkRenderingFreeType.so.1"
    "libvtkAcceleratorsVTKmDataModel.so.1"
    "libvtkRenderingLabel.so.1"
    "libvtkIOMotionFX.so.1"
    "libvtkRenderingSceneGraph.so.1"
    "libvtkFiltersParallelGeometry.so.1"
    "libvtkDomainsParallelChemistry.so.1"
    "libvtkmetaio.so.1"
    "libvtkRenderingVolumeAMR.so.1"
    "libvtkIOPIO.so.1"
    "libvtkRenderingVR.so.1"
    "libvtkIOCONVERGECFD.so.1"
    "libvtkIOFides.so.1"
    "libvtkIONetCDF.so.1"
    "libvtkCommonCore.so.1"
    "libvtkRenderingVolumeOpenGL2.so.1"
    "libvtkFiltersParallelImaging.so.1"
    "libvtkGeovisGDAL.so.1"
    "libvtkFiltersImaging.so.1"
    "libvtkIOOggTheora.so.1"
    "libvtkInfovisLayout.so.1"
    "libvtkCommonTransforms.so.1"
    "libvtkxdmf2.so.1"
    "libvtkImagingOpenGL2.so.1"
    "libvtkPythonInterpreter.so.1"
    "libvtkIOXdmf2.so.1"
    "libvtkFiltersCore.so.1"
    "libvtkIOXML.so.1"
    "libvtkIOLAS.so.1"
    "libvtkRenderingOpenGL2.so.1"
    "libvtkInteractionWidgets.so.1"
    "libvtkIOH5Rage.so.1"
    "libvtkGUISupportQtQuick.so.1"
    "libvtkGeovisCore.so.1"
    "libvtkFiltersPoints.so.1"
    "libvtkRenderingVtkJS.so.1"
    "libvtkkissfft.so.1"
    "libvtkRenderingParallelLIC.so.1"
    "libvtkIOParallelXdmf3.so.1"
    "libvtkRenderingRayTracing.so.1"
    "libvtkPythonContext2D.so.1"
    "libvtkCommonComputationalGeometry.so.1"
    "libvtkFiltersTopology.so.1"
    "libvtkRenderingFFMPEGOpenGL2.so.1"
    "libvtkImagingMath.so.1"
    "libvtkRenderingTk.so.1"
    "libvtkIOCesium3DTiles.so.1"
    "libvtkGUISupportQt.so.1"
    "libvtkRenderingOpenVR.so.1"
    "libvtkImagingMorphological.so.1"
    "libvtkIOSegY.so.1"
    "libvtkFiltersParallelDIY2.so.1"
    "libvtkIOMPIParallel.so.1"
    "libvtkIOCGNSReader.so.1"
    "libvtkFiltersFlowPaths.so.1"
    "libvtkIOOpenVDB.so.1"
    "libvtkImagingGeneral.so.1"
    "libvtkIOExportPDF.so.1"
    "libvtkParallelMPI4Py.so.1"
    "libvtkRenderingLICOpenGL2.so.1"
    "libvtkh5part.so.1"
    "libvtkTestingGenericBridge.so.1"
    "libvtkIOExport.so.1"
    "libvtkCommonArchive.so.1"
    "libvtkFiltersSMP.so.1"
    "libvtkFiltersTexture.so.1"
    "libvtkRenderingQt.so.1"
    "libvtkFiltersParallel.so.1"
    "libvtkRenderingGL2PSOpenGL2.so.1"
    "libvtkViewsContext2D.so.1"
    "libvtkRenderingFreeTypeFontConfig.so.1"
    "libvtkIOOMF.so.1"
    "libvtkIOAMR.so.1"
    "libvtkIOParallel.so.1"
    "libvtkIOOCCT.so.1"
    "libvtkViewsCore.so.1"
    "libvtkFiltersTensor.so.1"
    "libvtkvpic.so.1"
    "libvtkRenderingVolume.so.1"
    "libvtkFiltersParallelMPI.so.1"
    "libvtkCommonPython.so.1"
    "libvtkFiltersReebGraph.so.1"
)

for FILE in "${FILES[@]}"; do
    if [ ! -f "$LIB_DIR/$FILE" ]; then
        echo "Creating symbolic link for $FILE"
        ln -s "/path/to/$FILE" "$LIB_DIR/$FILE"
    else
        echo "Skipping $FILE, symbolic link already exists"
    fi
done

